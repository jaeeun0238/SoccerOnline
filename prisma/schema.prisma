generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model userData {
  userPID      Int    @id @default(autoincrement()) @map("userPID")
  userID       String @unique @map("userID")
  userName     String @unique @map("userName")
  userPassword String @map("userPassword")
  userScore    Int    @map("userScore")
  userCash     Int    @map("userCash")

  playerRostersData playerRostersData[]
  playerSquadsData  playerSquadsData[]

  @@map("userData")
}

model playerRostersData {
  playerRostersPID       Int                      @id @default(autoincrement()) @map("playerRostersPID")
  userPID                Int                      @map("userPID")
  playerPID              Int                      @map("playerPID")
  playerEnchant          Int                      @default(0) @map("playerEnchant")
  userData               userData                 @relation(fields: [userPID], references: [userPID], onDelete: Cascade, onUpdate: Cascade)
  playerEquipRostersData playerEquipRostersData[]

  @@map("playerRostersData")
}

model playerEquipRostersData {
  playerEquipRostersPID Int @id @default(autoincrement()) @map("playerEquipRostersPID")
  playerSquadsPID       Int @map("playerSquadsPID")
  playerRostersPID      Int @map("playerRostersPID")
  position              Int @map("position") // 0: striker, 1: midfielder, 2: defender

  playerRostersData playerRostersData @relation(fields: [playerRostersPID], references: [playerRostersPID], onDelete: Cascade, onUpdate: Cascade)
  playerSquadsData  playerSquadsData  @relation(fields: [playerSquadsPID], references: [playerSquadsPID], onDelete: Cascade, onUpdate: Cascade)
  //userData userData @relation(fields: [userPID], references: [userPID], onDelete: Cascade, onUpdate: Cascade)

  @@map("playerEquipRostersData")
}

model playerSquadsData {
  playerSquadsPID Int @id @default(autoincrement()) @map("playerSquadsPID")
  userPID         Int @map("userPID")

  userData userData @relation(fields: [userPID], references: [userPID], onDelete: Cascade, onUpdate: Cascade)

  playerEquipRostersData playerEquipRostersData[]

  @@index([userPID], map: "playerSquadsData_userPID_fkey")
  @@map("playerSquadsData")
}

model playerData {
  playerPID             Int    @id @default(autoincrement()) @map("playerPID")
  playerName            String @unique @map("playerName")
  playerAbilityATCK     Int    @map("playerAbilityATCK")
  playerAbilityDEFEND   Int    @map("playerAbilityDEFEND")
  playerAbilityMOBILITY Int    @map("playerAbilityMOBILITY")
  playerEnchant         Int    @default(0) @map("playerEnchant")
  playerPrice           Int    @default(0) @map("playerPrice")

  @@map("playerData")
}
